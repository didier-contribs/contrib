#!/bin/sh
# -*- sh -*-

: << =cut


=head1 NAME

apt.dist_upgrade - Plugin to monitor number of packages to upgrade

To try it :
  munin-run dist_upgrade --debug

=head1 NOTES


=head1 AUTHOR

Created by Didier 
v 1.0 16 sep 2014


=head1 LICENSE

# Copyleft, no copyright, use at your own risks
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 dated June,
# 1991.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# If you improve this script please send your version to my email address
# with the copyright notice upgrade with your name.


=head1 MAGIC MARKERS

 #%# family=apt
 #%# capabilities=autoconf

=cut

. $MUNIN_LIBDIR/plugins/plugin.sh

if [ "$1" = "autoconf" ]; then
	echo yes 
	exit 0
fi

CMD="apt-get -s dist-upgrade "
FILETEMP="/tmp/munin-dist-upgrade.cache"

# We rebuild only if more than x minutes, to avoid running dpkg too much
if [ ! -f $FILETEMP ]; then
	$CMD > $FILETEMP
fi
if test `find  $FILETEMP -type f -mmin +60`; then
	$CMD > $FILETEMP
fi



Nb=$(cat $FILETEMP | perl -ne 'print $1 if /(\d+) upgraded/')

if [ "$1" = "config" ]; then
	echo 'graph_title Packages to upgrade'
	echo 'graph_vlabel Number of Packages to upgrade'
	echo 'graph_category apt'
	echo 'graph_args --base 100 -l 0'

	echo 'packages_to_upgrade.draw LINE2'
	echo 'packages_to_upgrade.colour 0000FF'
	echo 'packages_to_upgrade.label Packages to upgrade'

	for field in packages_to_upgrade; do
			print_warning "$field"
			print_critical "$field"
	done

	exit 0
fi
echo "packages_to_upgrade.value $Nb"

# cacher 1 heures
# vim:syntax=bash
